str(dataMetrics)
names(dataMetrics) <- "PyLa_Py"
str(dataMetrics)
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE, hover = TRUE)
str(data_st)
data <- data[c(1,5,6,7,2,3,4)]
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE, hover = TRUE)
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE)
ret[["PyLa_Py"]] + ggtitle("DEGs (FDR < 0.1)")
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE, hover = TRUE)
rm(list=ls())
library(bigPint)
library(dplyr)
library(ggplot2)
library(plotly)
data("soybean_cn_sub")
data = soybean_cn_sub %>% select(ID, starts_with("S1"), starts_with("S3"))
data_st <- as.data.frame(t(apply(as.matrix(data[,-1]), 1, scale)))
data_st$ID <- as.character(data$ID)
data_st <- data_st[,c(length(data_st), 1:length(data_st)-1)]
colnames(data_st) <- colnames(data)
nID <- which(is.nan(data_st[,2]))
data_st[nID,2:length(data_st)] <- 0
ret <- plotPCP(data=data_st, saveFile = FALSE)
ret[["S1_S3"]]
ret <- plotSM(data=data, saveFile = FALSE)
ret[["S1_S3"]]
library(edgeR)
library(data.table)
rownames(data) = data[,1]
y = DGEList(counts=data[,-1])
group = c(1,1,1,2,2,2)
y = DGEList(counts=y, group=group)
Group = factor(c(rep("S1",3), rep("S3",3)))
design <- model.matrix(~0+Group, data=y$samples)
colnames(design) <- levels(Group)
y <- estimateDisp(y, design)
fit <- glmFit(y, design)
dataMetrics <- list()
contrast=rep(0,ncol(fit))
contrast[1]=1
contrast[2]=-1
lrt <- glmLRT(fit, contrast=contrast)
lrt <- topTags(lrt, n = nrow(y[[1]]))[[1]]
lrt <- setDT(lrt, keep.rownames = TRUE)[]
colnames(lrt)[1] = "ID"
lrt <- as.data.frame(lrt)
dataMetrics[[paste0(colnames(fit)[1], "_", colnames(fit)[2])]] <- lrt
str(dataMetrics, strict.width = "wrap")
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE)
ret[["S1_S3"]] + ggtitle("DEGs (FDR < 0.1)")
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE, hover = TRUE)
ret[["S1_S3"]] %>% layout(title="DEGs (FDR < 0.1)")
str(data_st)
dev.off()
dev.off()
dev.off()
rm(list=ls())
library(bigPint)
library(dplyr)
library(ggplot2)
library(plotly)
data = data.frame(ID=paste0(replicate(2000, "ID"), 1:2000), PyLa.1 = runif(2000), PyLa.2 = runif(2000), PyLa.3 = runif(2000), Py.1 = runif(2000), Py.2 = runif(2000), Py.3 = runif(2000))
data$ID = as.character(data$ID)
data_st <- as.data.frame(t(apply(as.matrix(data[,-1]), 1, scale)))
data_st$ID <- as.character(data$ID)
data_st <- data_st[,c(length(data_st), 1:length(data_st)-1)]
colnames(data_st) <- colnames(data)
nID <- which(is.nan(data_st[,2]))
data_st[nID,2:length(data_st)] <- 0
ret <- plotPCP(data=data_st, saveFile = FALSE)
ret[["PyLa_Py"]]
ret <- plotSM(data=data, saveFile = FALSE)
ret[["PyLa_Py"]]
library(edgeR)
library(data.table)
rownames(data) = data[,1]
y = DGEList(counts=data[,-1])
group = c(1,1,1,2,2,2)
y = DGEList(counts=y, group=group)
Group = factor(c(rep("PyLa",3), rep("Py",3)))
design <- model.matrix(~0+Group, data=y$samples)
colnames(design) <- levels(Group)
y <- estimateDisp(y, design)
fit <- glmFit(y, design)
dataMetrics <- list()
contrast=rep(0,ncol(fit))
contrast[1]=1
contrast[2]=-1
lrt <- glmLRT(fit, contrast=contrast)
lrt <- topTags(lrt, n = nrow(y[[1]]))[[1]]
lrt <- setDT(lrt, keep.rownames = TRUE)[]
colnames(lrt)[1] = "ID"
lrt <- as.data.frame(lrt)
dataMetrics[[paste0(colnames(fit)[1], "_", colnames(fit)[2])]] <- lrt
str(dataMetrics, strict.width = "wrap")
str(data_st)
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE)
ret[["PyLa_Py"]] + ggtitle("DEGs (FDR < 0.1)")
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE, hover = TRUE)
names(dataMetrics) <- "PyLa_Py"
str(data_st)
names(dataMetrics) <- "Py_PyLa"
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE, hover = TRUE)
str(dataMetrics)
str(data_st)
str(dataMetrics)
names(dataMetrics) <- "PyLa_Py"
str(dataMetrics)
str(data)
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE)
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE, hover = TRUE)
rm(list=ls())
dev.off()
dev.off()
data("soybean_cn_sub")
data = soybean_cn_sub %>% select(ID, starts_with("S1"), starts_with("S3"))
data_st <- as.data.frame(t(apply(as.matrix(data[,-1]), 1, scale)))
data_st$ID <- as.character(data$ID)
data_st <- data_st[,c(length(data_st), 1:length(data_st)-1)]
colnames(data_st) <- colnames(data)
nID <- which(is.nan(data_st[,2]))
data_st[nID,2:length(data_st)] <- 0
ret <- plotPCP(data=data_st, saveFile = FALSE)
ret[["S1_S3"]]
ret <- plotSM(data=data, saveFile = FALSE)
ret[["S1_S3"]]
library(edgeR)
library(data.table)
rownames(data) = data[,1]
y = DGEList(counts=data[,-1])
group = c(1,1,1,2,2,2)
y = DGEList(counts=y, group=group)
Group = factor(c(rep("S1",3), rep("S3",3)))
design <- model.matrix(~0+Group, data=y$samples)
colnames(design) <- levels(Group)
y <- estimateDisp(y, design)
fit <- glmFit(y, design)
dataMetrics <- list()
contrast=rep(0,ncol(fit))
contrast[1]=1
contrast[2]=-1
lrt <- glmLRT(fit, contrast=contrast)
lrt <- topTags(lrt, n = nrow(y[[1]]))[[1]]
lrt <- setDT(lrt, keep.rownames = TRUE)[]
colnames(lrt)[1] = "ID"
lrt <- as.data.frame(lrt)
dataMetrics[[paste0(colnames(fit)[1], "_", colnames(fit)[2])]] <- lrt
str(dataMetrics, strict.width = "wrap")
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE)
ret[["S1_S3"]] + ggtitle("DEGs (FDR < 0.1)")
str(dataMetrics)
names(dataMetrics)
names(dataMetrics) <- "S3_S1"
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE)
ret[["S1_S3"]] + ggtitle("DEGs (FDR < 0.1)")
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3, lineColor = "magenta", saveFile = FALSE, hover = TRUE)
ret[["S1_S3"]] %>% layout(title="DEGs (FDR < 0.1)")
str(data_st)
str(dataMetrics)
dev.off()
dev.off()
library(bigPint)
library(dplyr)
library(ggplot2)
library(plotly)
data = data.frame(ID=paste0(replicate(2000, "ID"), 1:2000), PyLa.1 = runif(2000), PyLa.2 = runif(2000), PyLa.3 = runif(2000), Py.1 = runif(2000), Py.2 = runif(2000), Py.3 = runif(2000))
data$ID = as.character(data$ID)
data_st <- as.data.frame(t(apply(as.matrix(data[,-1]), 1, scale)))
data_st$ID <- as.character(data$ID)
data_st <- data_st[,c(length(data_st), 1:length(data_st)-1)]
colnames(data_st) <- colnames(data)
nID <- which(is.nan(data_st[,2]))
data_st[nID,2:length(data_st)] <- 0
ret <- plotPCP(data=data_st, saveFile = FALSE)
ret[["PyLa_Py"]]
ret <- plotSM(data=data, saveFile = FALSE)
ret[["PyLa_Py"]]
library(edgeR)
library(data.table)
rownames(data) = data[,1]
y = DGEList(counts=data[,-1])
group = c(1,1,1,2,2,2)
y = DGEList(counts=y, group=group)
Group = factor(c(rep("PyLa",3), rep("Py",3)))
design <- model.matrix(~0+Group, data=y$samples)
colnames(design) <- levels(Group)
y <- estimateDisp(y, design)
fit <- glmFit(y, design)
dataMetrics <- list()
dev.off()
rm(list=ls())
dev.off()
data = data.frame(ID=paste0(replicate(2000, "ID"), 1:2000), PyLa.1 = runif(2000), PyLa.2 = runif(2000), PyLa.3 = runif(2000), Py.1 = runif(2000), Py.2 = runif(2000), Py.3 = runif(2000))
data$ID = as.character(data$ID)
data_st <- as.data.frame(t(apply(as.matrix(data[,-1]), 1, scale)))
data_st$ID <- as.character(data$ID)
data_st <- data_st[,c(length(data_st), 1:length(data_st)-1)]
colnames(data_st) <- colnames(data)
nID <- which(is.nan(data_st[,2]))
data_st[nID,2:length(data_st)] <- 0
View(data_st)
ret <- plotPCP(data=data_st, saveFile = FALSE)
library(tidyverse)
library(RedditExtractoR)
links499 <- reddit_urls(search_terms = "president",
cn_threshold = 0, # minimum number of comments
page_threshold = 499,
sort_by = "comments",
wait_time = 2)
links499Com <- get_reddit(search_terms = "president",
cn_threshold = 0,
page_threshold = 499,
sort_by = "comments",
wait_time =2)
# Have the same number of unique titles
unique(links499$title)
# Have the same number of unique titles
length(unique(links499$title))
length(unique(links499Com$title))
# Both have minimum of 12378
min(links499Com$num_comments)
min(links499$num_comments)
links1000 <- reddit_urls(
search_terms = "president",
cn_threshold = 0, # minimum number of comments
page_threshold = 1000, # can probably get as many URLs as you want but you can only extract a certain amount of data at one time
sort_by = "comments",
wait_time = 2
)
links1000Com <- get_reddit(search_terms = "president",
cn_threshold = 0,
page_threshold = 1000,
sort_by = "comments",
wait_time =2 )
# Have the same number of unique titles (n=239)
length(unique(links1000$title))
length(unique(links1000Com$title))
# Both have minimum of 12378
min(links1000Com$num_comments)
min(links1000$num_comments)
library(bigPint)
install.packages("bigpint")
library(bigPint)
install.packages("bigPint")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# The following initializes usage of Bioc devel
BiocManager::install(version='devel')
BiocManager::install("bigPint")
library(bigPint)
library(dplyr)
library(ggplot2)
library(plotly)
data("soybean_cn_sub")
data = soybean_cn_sub %>% select(ID, starts_with("S1"), starts_with("S3"))
data_st <- as.data.frame(t(apply(as.matrix(data[,-1]), 1, scale)))
data_st$ID <- as.character(data$ID)
data_st <- data_st[,c(length(data_st), 1:length(data_st)-1)]
colnames(data_st) <- colnames(data)
nID <- which(is.nan(data_st[,2]))
data_st[nID,2:length(data_st)] <- 0
library(edgeR)
BiocManager::install("edgeR")
library(data.table)
rownames(data) = data[,1]
y = DGEList(counts=data[,-1])
library(edgeR)
rownames(data) = data[,1]
y = DGEList(counts=data[,-1])
group = c(1,1,1,2,2,2)
y = DGEList(counts=y, group=group)
Group = factor(c(rep("S1",3), rep("S3",3)))
design <- model.matrix(~0+Group, data=y$samples)
colnames(design) <- levels(Group)
y <- estimateDisp(y, design)
fit <- glmFit(y, design)
dataMetrics <- list()
contrast=rep(0,ncol(fit))
contrast[1]=1
contrast[2]=-1
lrt <- glmLRT(fit, contrast=contrast)
lrt <- topTags(lrt, n = nrow(y[[1]]))[[1]]
lrt <- setDT(lrt, keep.rownames = TRUE)[]
colnames(lrt)[1] = "ID"
lrt <- as.data.frame(lrt)
dataMetrics[[paste0(colnames(fit)[1], "_", colnames(fit)[2])]] <- lrt
ret <- plotPCP(data_st, dataMetrics, threshVal = 0.1, lineSize = 0.3,
lineColor = "magenta", saveFile = FALSE)
ret[["S1_S3"]] + ggtitle("DEGs (FDR < 0.1)")
ret[["S1_S3"]] + ggtitle("DEGs (FDR < 0.1)") +theme_void()
install.packages("RPushbullet")
library(httr)
library(stringr)
library(stringi)
library(RPushbullet)
pbSetup()
install.packages("RPushbullet")
install.packages("RPushbullet")
library(RPushbullet)
library(RPushbullet)
token <- "O7NCXODAR56LKJDOFXJL6"
url <- "https://www.eventbrite.com/o/florida-department-of-health-in-collier-county-32165407705"
while(TRUE)
{
text <- GET(url)$content
text <- intToUtf8(text)
x <- as.data.frame(
stri_locate_all(
pattern =
"https://www.eventbrite.com/e/doh-collier-covid-19-vaccine-event-at-north-collier-regional-park-tickets", text, fixed=TRUE)
)
# Get Event IDs
events <- rep("",nrow(x))
for (i in 1:nrow(x))
{
events[i] <- substr(text, x$end[i]+2, x$end[i] + 13)
}
events <- unique(events)
for (eventId in events)
{
url <-paste0(
"https://www.eventbriteapi.com/v3/events/",
eventId,
"/?expand=ticket_availability&token=",
token
)
resp <- GET(url)
if (content(resp,as="parsed")$ticket_availability$is_sold_out)
{
Sys.sleep(5)
cat("x ")
} else {
pbPost(
#  devices = "Phone",
channel = "",
type = "note",
title = "Alert from COLLIER COUNTY",
body =
paste0(
"https://www.eventbrite.com/e/doh-collier-covid-19-vaccine-event-at-north-collier-regional-park-tickets-",
eventId,
"/"),
apikey = "o.JbladjfklcEOOZnaZ7Tp3rsxf4vShe82xXy"
)
Sys.sleep(3600)
}
}
}
library(rvest)
library(dplyr)
link = "https://www.supercluster.com/astronauts?sort=launch%20order&ascending=false&list=true&life%20form=human&"
page = read_html(link)
name = page %>% html_nodes(.f3) %>% html_text()
name = page %>% html_nodes(".f3") %>% html_text()
name
name
link = "https://www.supercluster.com/astronauts?sort=launch%20order&ascending=false&list=true&life%20form=human&"
page = read_html(link)
name = page %>% html_nodes(".f3") %>% html_text()
name
daysInSpace = page %>% html_nodes(".caps+ .bau") %>% html_text()
daysInSpace
str(daysInSpace)
name = page %>% html_nodes(".f3") %>% html_text() %>% toString()
name
name = page %>% html_node(".f3") %>% html_text() %>% toString()
name
name = page %>% html_nodes(".f3") %>% html_text() %>% toString()
name
name = page %>% html_nodes(".f3")
name
daysInSpace = page %>% html_nodes(".caps+ .bau")
daysInSpace
page
page = read_html(link) %<% html_nodes("body")
page = read_html(link) %>% html_nodes("body")
page
name = page %>% html_nodes(".f3") %>% html_text() %>% toString()
name
page = read_html(link) #%>% html_nodes("body")
str(page)
page = read_html(link) #%>% html_nodes("body")
table<-html_nodes(page, "tbody tr")
table
page = read_html(link) #%>% html_nodes("body")
link = "https://www.supercluster.com/astronauts?sort=&ascending=false&life%20form=human&"
page = read_html(link) #%>% html_nodes("body")
page
name = page %>% html_nodes(".mt025:nth-child(2) .f1") %>% html_text()
name
page %>% html_nodes(".mt025:nth-child(2) .f1")
name = page %>% html_nodes("ml1 akkura small caps") %>% html_text() #%>% toString()
name
name = page %>% html_nodes(" f fr py05 pr075") %>% html_text() #%>% toString()
name
link = "https://www.supercluster.com/astronauts/mark-p.-stucky?sort=&ascending=false&life%20form=human&"
page = read_html(link)
page
link = "https://www.supercluster.com/astronauts/christina-h.-koch?sort=&ascending=false&life%20form=human&"
page = read_html(link)
page %>% html_nodes("pr015")
page %>% html_nodes("bau-bold h4 m0 ml0 p0 js-launch-timer")
page %>% html_nodes("bau s16")
install.packages("RSelenium")
library(RSelenium)
### Install Rselenium
rD <- rsDriver(browser="chrome", port=4545L, verbose=F)
### Install Rselenium
rD <- rsDriver(browser="chrome", port=4535L, verbose=F)
link = "https://www.supercluster.com/astronauts/jessica-u.-meir?sort=&ascending=false&life%20form=human&"
page = read_html(link) #%>% html_nodes("body")
page
name = page %>% html_nodes("pr015") %>% html_text() #%>% toString()
name
page %>% html_nodes("table")
page %>% html_nodes("class")
page %>% html_nodes("span.pr015")
page %>% html_nodes("span.bau-bold.h4.m0.ml0.p0.js-launch-timer")
t = page %>% html_nodes("span.bau-bold.h4.m0.ml0.p0.js-launch-timer")
str(t)
page %>% html_nodes("span.pr015")
page %>% html_nodes("div.bau.s16")
t=page %>% html_nodes("div.bau.s16")
str(t)
str(t[[1]])
page %>% html_nodes("a.under")
# Time in space
page %>% html_nodes("span.pr015")
page %>% html_nodes("div.pt1.pb0.h5.caps.cw")
page %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
page %>% html_nodes("a.cb.super_card__link_grid")
urls = page %>% html_nodes("a.cb.super_card__link_grid")
str(urls)
str(urls[[1]])
str(urls[[2]])
urls
page %>% html_nodes("civ.rel.z0")
page %>% html_nodes("div.rel.z0")
link2 = "https://www.supercluster.com/astronauts?sort=&ascending=false&limit=true&life%20form=human&"
page2 = read_html(link2)
page2 %>% html_nodes("a.cb.super_card__link_grid")
link2 = "https://www.supercluster.com/astronauts?sort=&ascending=false&list=true&limit=false&life%20form=human&"
page2 = read_html(link2)
page2 %>% html_nodes("a.cb.super_card__link_grid")
page2 %>% html_nodes("a.cb.super_card__link_grid")
page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")"
page %>% html_nodes("div.rel.z0")
page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
urls = page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
urls[[1]]
urls[[1]][1]
urls[[1]][[1]]
page %>% html_nodes("div.f1 xsmall akkura")
page %>% html_nodes("div.f1.xsmall.akkura")
link2 = "https://www.supercluster.com/astronauts?sort=&ascending=false&list=true&limit=false&life%20form=human&"
page2 = read_html(link2)
page2 %>% html_nodes("a.cb.super_card__link_grid")
page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
page %>% html_nodes("div.f1.xsmall.akkura")
page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
urls = page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
str(urls)
urls[[1]]
urls[[1]][[1]]
urls[[1]][[2]]
urls[[1]][[1]][1]
urls[[1]][[2]][1]
urls[[1]][[1]]
urls[[1]][1]
urls[[1]][2]
page %>% html_nodes(".f1+ .f1 .f1")
rets = page %>% html_nodes(".f1+ .f1 .f1")
str(rets)
rets[[1]]
rets[[1]][1]
rets = page %>% html_nodes(".f1+ .f1 .mr05")
str(rets)
page2 %>% html_nodes("div.f1.xsmall.akkura")
page2 %>% html_nodes(".f1+ .f1 .mr05")
page2 %>% html_nodes("class.astronaut_cell.x")
link2 = "https://www.supercluster.com/astronauts?sort=&ascending=false&list=true&life%20form=human&"
page2 = read_html(link2)
page2 %>% html_nodes("a.cb.super_card__link_grid")
page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
page2 %>% html_nodes("div.f1.xsmall.akkura")
page2 %>% html_nodes(".f1+ .f1 .mr05")
page2 %>% html_nodes("class.astronaut_cell.x")
page2 %>% html_nodes("a.astronaut_cell.x")
page2 %>% html_nodes("a.cb.super_card__link_grid")
page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
page2 %>% html_nodes("div.f1.xsmall.akkura")
page2 %>% html_nodes(".f1+ .f1 .mr05")
page2 %>% html_nodes("a.astronaut_cell.x")
page %>% html_nodes(".biz-name") %>% html_attr('href')
page2 %>% html_nodes("a.astronaut_cell.x")
page2 %>% html_nodes("a.astronaut_cell.x") %>% html_attr('href')
page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
lar = page2 %>% html_nodes("div.astronaut_index__content.container--xl.mxa.f.fr.fw.aifs.pl15.py05")
str(lar)
lar[[1]]
lar[[1]][1]
link = "https://www.supercluster.com/astronauts/jessica-u.-meir?sort=&ascending=false&life%20form=human&"
link = "https://www.supercluster.com/astronauts/jessica-u.-meir?sort=&ascending=false&life%20form=human&"
page = read_html(link)
# Time in space and spacewalk time
page %>% html_nodes("span.pr015")
# Gender
page %>% html_nodes("a.under")
# Cross Karman Line
page %>% html_nodes("div.pt1.pb0.h5.caps.cw")
setwd("~/mdrs228.github.io")
